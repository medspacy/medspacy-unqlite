name: test_build
on:
  workflow_dispatch:
  push:
    branches: [ master ]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'docs/**'
      - './*.py'
      - './*.pyx'
  pull_request:
    branches: [ master ]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'docs/**'
      - './*.py'
      - './*.pyx'



concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build_wheels:
    name: Build ${{ matrix.python }}-${{ matrix.buildplat[1] }}
    runs-on: ${{ matrix.buildplat[0] }}
    strategy:
      # Ensure that a wheel builder finishes even if another fails
      fail-fast: false
      matrix:
        # Github Actions doesn't support pairing matrix values together, let's improvise
        # https://github.com/github/feedback/discussions/7835#discussioncomment-1769026
        buildplat:
          - [ubuntu-latest, manylinux_x86_64]
          - [ubuntu-latest, musllinux_x86_64]
          - [macos-13, macosx_x86_64]
          - [macos-latest, macosx_arm64]
          - [windows-latest, win_amd64]
          - [windows-2019, win32]
        # python: ["cp38", "cp39", "cp310", "cp311"]
        python: ["cp38"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
    
      - name: Cache cibuild
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-cibuilds
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: /var/lib/docker/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-


      - name: Print all build identifiers
        run: |
          pipx run cibuildwheel --print-build-identifiers
                  
      # - name: Build wheels
      #   uses: pypa/cibuildwheel@v2.23.3
      #   env:
      #     # TODO: Build Cython with the compile-all flag?
      #     # Unfortunately, there is no way to modify cibuildwheel's build command
      #     # so there is no way to pass this in directly.
      #     # This would require modifying cython's setup.py to look for these flags
      #     # in env vars.
      #     CIBW_BEFORE_BUILD: "pip install Cython"
      #     # CIBW_BEFORE_BUILD: "python setup.py build_ext --inplace"
      #     CIBW_BUILD: ${{ matrix.python }}-${{ matrix.buildplat[1] }}
      #     CIBW_ARCHS: auto
      #     CIBW_ENVIRONMENT: "CFLAGS='-O3 -g0 -mtune=generic -pipe -fPIC' LDFLAGS='-fPIC'"
      #     CIBW_TEST_COMMAND: "python {package}/tests.py"

      - name: Build wheels
        shell: bash
        run: |
          export CIBW_BEFORE_BUILD="pip install Cython"
          export CIBW_BUILD=${{ matrix.python }}-${{ matrix.buildplat[1] }}
          export CIBW_ARCHS=auto
          export CIBW_ENVIRONMENT="CFLAGS='-O3 -g0 -mtune=generic -pipe -fPIC' LDFLAGS='-fPIC'"
          export CIBW_TEST_COMMAND="python {package}/tests.py"
          pipx run cibuildwheel --output-dir wheelhouse 

      - name: Install dependencies
        run: |
          pip install twine
          twine check wheelhouse/*.whl